# {{secrets.GITHUB_TOKEN}} to auth for pkg publishing
name: "Test"
on:
  pull_request:
  push:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20200618_377345e/install
        nix_path: nixpkgs=channel:nixos-20.09
        extra_nix_config: |
                experimental-features = nix-command
                binary-caches-parallel-connections = 10
                connect-timeout = 5
    - uses: cachix/cachix-action@v7
      with:
        name: njk
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - name: Show nixpkgs version
      run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'
    - name: Build binary cache
      env:
        CACHE_SIGNING_KEY: '${{ secrets.CACHE_SIGNING_KEY }}'
      run: nix-shell --run "binary-cache-build"

    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: bincache/**/*
    #     release_name: Testing
    #     tag: ${{ github.ref }}
    #     overwrite: true
    #     file_glob: true


    # - name: Cache shell.nix deps
    #   run: nix-shell --run 'nix-store -qR --include-outputs $(nix-instantiate shell.nix) | cachix push $CACHIX_CACHE_NAME'
    # - run: nix-shell --run "tf-required_providers && cat ./deploy/terraform-providers.json | jq '.' && echo $PWD && ls -lha"

    # - run: nix-shell --run "env"
    # - run: env
    # - run: cat /etc/nix/nix.conf
    # - run: nix-build
    # - run: nix-shell --run "echo OK"
