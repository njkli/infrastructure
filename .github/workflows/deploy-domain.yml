# {{secrets.GITHUB_TOKEN}} to auth for pkg publishing
name: "Domain - deploy"

on:
  push:
   paths:
    - "deploy/domain/*.nix"
    # - "deploy/**/*.nix"

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20200618_377345e/install
        nix_path: nixpkgs=channel:nixos-20.09
        extra_nix_config: |
                experimental-features = nix-command
                binary-caches-parallel-connections = 10
                connect-timeout = 5
    - uses: cachix/cachix-action@v8
      with:
        name: njk
        signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

    # - name: Show nixpkgs version
    #   run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

    - name: Cache ci pkgs
      run: nix-build

    - name: Cache nix store with cachix
      run: nix-shell --run 'nix-store -qR --include-outputs $(nix-instantiate shell.nix) | cachix push njk'

    # - name: Cache nixstore with github
    #   uses: actions/cache@v2
    #   with:
    #     path: |
    #       /nix
    #     key: ${{ runner.os }}-${{ hashFiles('nix/*.*') }}

    - name: Deploy domain
      env:
        CACHE_SIGNING_KEY: ${{ secrets.CACHE_SIGNING_KEY }}
        ARTIFACTORY_PASSWD: ${{ secrets.ARTIFACTORY_PASSWD }}
        ARTIFACTORY_UNAME: ${{ secrets.ARTIFACTORY_UNAME }}
        ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
        DEPLOY_DOMAIN: ${{ secrets.DEPLOY_DOMAIN }}
        NAMEDOTCOM_API_KEY: ${{ secrets.NAMEDOTCOM_API_KEY }}
        NAMEDOTCOM_API_SECRET: ${{ secrets.NAMEDOTCOM_API_SECRET }}
        PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_TOKEN }}
        PUSHOVER_USER: ${{ secrets.PUSHOVER_USER }}
        VULTR_API_KEY: ${{ secrets.VULTR_API_KEY }}
      run: nix-shell --run "cd deploy/domain && tf-deploy"

    - name: Push Build Status Notifications
      if: ${{ always() }}
      uses: umahmood/pushover-actions@v1.0.0
      env:
        PUSHOVER_TOKEN: ${{ secrets.PUSHOVER_API_TOKEN }}
        PUSHOVER_USER: ${{ secrets.PUSHOVER_USER_KEY }}
      with:
        status: ${{ job.status }}
        title: 'Repo. Activity Notification'
        message: 'Hello World!'

    # - name: Build binary cache
    #   env:
    #     CACHE_SIGNING_KEY: '${{ secrets.CACHE_SIGNING_KEY }}'
    #   run: nix-shell --run "binary-cache-build"

    # - name: Upload binaries to release
    #   uses: svenstaro/upload-release-action@v2
    #   with:
    #     repo_token: ${{ secrets.GITHUB_TOKEN }}
    #     file: bincache/**/*
    #     release_name: Testing
    #     tag: ${{ github.ref }}
    #     overwrite: true
    #     file_glob: true

    # - name: Cache shell.nix deps
    #   run: nix-shell --run 'nix-store -qR --include-outputs $(nix-instantiate shell.nix) | cachix push $CACHIX_CACHE_NAME'
    # - run: nix-shell --run "tf-required_providers && cat ./deploy/terraform-providers.json | jq '.' && echo $PWD && ls -lha"

    # - run: nix-shell --run "env"
    # - run: env
    # - run: cat /etc/nix/nix.conf
    # - run: nix-build
    # - run: nix-shell --run "echo OK"
